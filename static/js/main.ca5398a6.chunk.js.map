{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/getMovies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","endPoint","URL","fetch","then","response","json","reqvest","FindMovie","addNewMovie","useState","qveryValue","setQveryValue","setMovie","showMovieCard","setShowMovieCard","errorMassage","setErrorMassage","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","result","Response","Error","newMovie","Title","Plot","Poster","imdbID","App","state","data","setState","some","el","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca5398a6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const reqvest = (endPoint) => {\n  const yourkey = '1c07d812';\n  const URL = `https://www.omdbapi.com/?apikey=${yourkey}&t=${endPoint}`;\n\n  return fetch(URL)\n    .then(response => response.json());\n};\n\nexport const getMovie = title => reqvest(title);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/getMovies';\n\nexport const FindMovie = ({ addNewMovie }) => {\n  const [qveryValue, setQveryValue] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [showMovieCard, setShowMovieCard] = useState(false);\n  const [errorMassage, setErrorMassage] = useState('');\n\n  const findMovie = () => {\n    getMovie(qveryValue)\n      .then((result) => {\n        if (result.Response === 'False') {\n          setShowMovieCard(false);\n          setErrorMassage(result.Error);\n          setMovie(null);\n          setQveryValue('');\n\n          return;\n        }\n\n        const newMovie = {\n          title: result.Title,\n          description: result.Plot,\n          imgUrl: result.Poster,\n          imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n          imdbId: result.imdbID,\n        };\n\n        setMovie(newMovie);\n        setErrorMassage('');\n        setShowMovieCard(true);\n        setQveryValue('');\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={qveryValue}\n              onChange={(event) => {\n                setQveryValue(event.target.value);\n                setErrorMassage('');\n              }}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie !== null) {\n                  addNewMovie(movie);\n                  setShowMovieCard(false);\n                  setMovie(null);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {showMovieCard ? (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      ) : (\n        <p>{errorMassage}</p>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addNewMovie = (movie) => {\n    this.setState((state) => {\n      const hadMovie = state.movies.some(el => el.imdbId === movie.imdbId);\n\n      return {\n        movies: !hadMovie\n          ? [...state.movies, movie]\n          : [...state.movies],\n      };\n    });\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addNewMovie={this.addNewMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}